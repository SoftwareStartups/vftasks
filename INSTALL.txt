1 vfTasks Installation
=======================

This file describes how to build the vfTasks library on your local system.


2 Obtaining vfTasks
====================

  1. Download vfTasks archive from the Vector Fabrics website
     http://www.vectorfabrics.com/content/products/vftasks.

  2. Unpack the vfTasks archive in a local directory.
     $ tar -zxvf vftasks-<version>.tar.gz


3 Prerequisites
===============

  * To configure the source, CMake is needed (http://www.cmake.org).

  * To compile and run the unit tests, the GNU C++ compiler (g++) or alternative ANSI C++
    compiler is required. In addition, the CppUnit library is required
    (http://sourceforge.net/apps/mediawiki/cppunit)

  * To build the (html) documentation from the sources,
    Doxygen is required (http://www.stack.nl/~dimitri/doxygen).

3.1 Debian/Ubuntu
-----------------

  * The GNU C compiler (gcc) is required.
    Alternative ANSI C compilers may be used but are not tested.
    $ sudo apt-get install gcc libc-dev libc6-dev

  * To build the source, the GNU Make system is used (http://www.gnu.org/software/make).
    $ sudo apt-get install make cmake

  * For unit testing and doxygen:
    $ sudo apt-get install g++ libcppunit-dev doxygen

3.2 Windows
-----------

  * An ansi C compiler and build environment are needed.
    Microsoft freely offers Visual Studio Express
    (http://www.microsoft.com/express/Downloads/#2010-Visual-CPP)

  * A POSIX compliant thread library. (http://sourceware.org/pthreads-win32/).


The build has been verified on Ubuntu 10.04 64 bits and 32 bits with gcc/g++ version 4.4.3,
CppUnit version 1.12.1, and Doxygen 1.6.3


4 Building vfTasks
===================

  $ cd vftasks-<version>
  $ mkdir build
  $ cd build

4.1 Debian/Ubuntu
-----------------

  * Configure the build:
    cmake ..

  * Build and install the library and headers:
    make install DESTDIR=<PATH_TO_INSTALL_DIR>
    The vfTasks library is created in <PATH_TO_INSTALL_DIR>/lib
    The include files are located in <PATH_TO_INSTALL_DIR>/include

  * Build and run the unit tests:
    $ make test

  * Build and run the examples:
    - The worker thread / 2D synchronization example:
      $ make 2d_partitioned
      $ ./examples/2d_partitioned
    - The streaming fifo example:
      $ make streams
      $ ./examples/streams

  * Build the html documentation:
    $ make doc
    The documentation is located under vftasks-<version>/build/doc/html/

  * Clean the build directory with:
    $ make clean


4.1 Windows
-----------------

  * Configure the sources for use in MicroSoft Visual Studio:
    $ cmake -G "Visual Studio <VERSION>" ..

  * Open the generated solution file with the Visual Studio IDE.

